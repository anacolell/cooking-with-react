{"version":3,"sources":["components/Ingredient.js","components/IngredientList.js","components/Recipe.js","components/RecipeList.js","components/RecipeIngredientEdit.js","components/RecipeEdit.js","components/SearchBox.js","components/App.js","index.js"],"names":["Ingredient","name","amount","IngredientList","ingredientElements","ingredients","map","ingredient","id","className","Recipe","props","useContext","RecipeContext","handleRecipeDelete","handleRecipeSelect","useState","flip","setFlip","height","setHeight","frontEl","useRef","backEl","_id","image","cookTime","servings","instructions","author","setMaxHeight","frontHeight","current","getBoundingClientRect","backHeight","Math","max","useEffect","window","addEventListener","removeEventListener","onClick","style","ref","src","alt","icon","faEdit","faTrash","RecipeList","recipes","filteredRecipes","breakpointCols","default","1100","800","600","columnClassName","recipe","RecipeIngredientEdit","handleIngredientDelete","handleIngredientChange","currentIngredient","setCurrentIngredient","handleIngredientEditInputChange","changes","type","onChange","e","target","value","RecipeEdit","handleRecipeChange","currentRecipe","setCurrentRecipe","handleEditInputChange","index","findIndex","r","filter","i","htmlFor","files","formData","FormData","append","axios","post","then","response","data","secure_url","console","log","uploadImage","min","parseInt","newIngredient","uuidv4","handleIngredientAdd","faPlus","undefined","SearchBox","handleRecipeSearch","placeholder","faSearch","React","createContext","App","selectedRecipeId","setSelectedRecipeId","setRecipes","searchText","setSearchText","selectedRecipe","find","getRecipes","get","allRecipes","catch","error","recipeContextValue","handleRecipeAdd","delete","res","put","input","newRecipe","url","method","toLowerCase","includes","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a2d92cb.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Ingredient({ name, amount}) {\n  return (\n    <>\n      <span>{name}</span>\n      <span>{amount}</span>\n    </>\n  )\n}\n","import React from \"react\";\nimport Ingredient from \"./Ingredient\";\n\nexport default function IngredientList({ ingredients }) {\n  const ingredientElements = ingredients.map((ingredient) => {\n    return <Ingredient key={ingredient.id} {...ingredient} />;\n  });\n  return <div className=\"ingredient-grid\">{ingredientElements}</div>;\n}\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\nimport IngredientList from \"./IngredientList\";\nimport { RecipeContext } from \"./App\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function Recipe(props) {\n  const { handleRecipeDelete, handleRecipeSelect } = useContext(RecipeContext);\n  const [flip, setFlip] = useState(false);\n  const [height, setHeight] = useState(\"initial\");\n\n  const frontEl = useRef();\n  const backEl = useRef();\n\n  const {\n    _id,\n    image,\n    name,\n    cookTime,\n    servings,\n    instructions,\n    ingredients,\n    author,\n  } = props;\n\n  function setMaxHeight() {\n    const frontHeight = frontEl.current.getBoundingClientRect().height;\n    const backHeight = backEl.current.getBoundingClientRect().height;\n    setHeight(Math.max(frontHeight, backHeight));\n  }\n\n  useEffect(setMaxHeight, [\n    name,\n    cookTime,\n    servings,\n    instructions,\n    ingredients,\n  ]);\n  useEffect(() => {\n    window.addEventListener(\"resize\", setMaxHeight);\n    return () => window.removeEventListener(\"resize\", setMaxHeight);\n  }, []);\n\n  return (\n    <div\n      className={`recipe ${flip ? \"flip\" : \"\"}`}\n      onClick={() => setFlip(!flip)}\n      style={{ height: height }}\n    >\n      <div className=\"front\" ref={frontEl}>\n        <img className=\"recipe__image\" src={image} alt=\"\" />\n        <div className=\"recipe__header\">\n          <h3 className=\"recipe__title\">{name}</h3>\n        </div>\n      </div>\n      <div className=\"back\" ref={backEl}>\n        <div className=\"btn-container\">\n          <span\n            className=\"btn btn--edit\"\n            onClick={() => handleRecipeSelect(_id)}\n          >\n            <FontAwesomeIcon icon={faEdit} />\n          </span>\n          <span\n            className=\"btn btn--delete\"\n            onClick={() => handleRecipeDelete(_id)}\n          >\n            <FontAwesomeIcon icon={faTrash} />\n          </span>\n        </div>\n        <div className=\"recipe__row\">\n          <span className=\"recipe__label\">Cook Time:</span>\n          <span className=\"recipe__value\">{cookTime}</span>\n        </div>\n        <div className=\"recipe__row\">\n          <span className=\"recipe__label\">Servings:</span>\n          <span className=\"recipe__value\">{servings}</span>\n        </div>\n        <div className=\"recipe__row\">\n          <span className=\"recipe__label\">Ingredients:</span>\n          <div className=\"recipe__value recipe__value--indented\">\n            <IngredientList ingredients={ingredients} />\n          </div>\n        </div>\n        <div className=\"recipe__row\">\n          <span className=\"recipe__label\">Instructions:</span>\n          <div className=\"recipe__value recipe__instructions recipe__value--indented\">\n            {instructions}\n          </div>\n        </div>\n        <div className=\"recipe__row recipe__author\">\n          <span className=\"recipe__label\">Created by </span>\n          <span className=\"recipe__value\">{author}</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import Recipe from \"./Recipe\";\nimport Masonry from \"react-masonry-css\";\n\nexport default function RecipeList({ recipes, filteredRecipes }) {\n  const breakpointColumnsObj = {\n    default: 4,\n    1100: 3,\n    800: 2,\n    600: 1,\n  };\n  return (\n    <>\n      <Masonry\n        breakpointCols={breakpointColumnsObj}\n        className=\"my-masonry-grid\"\n        columnClassName=\"my-masonry-grid_column\"\n      >\n        {filteredRecipes.map((recipe) => {\n          return <Recipe key={recipe._id} {...recipe} />;\n        })}\n      </Masonry>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nexport default function RecipeIngredientEdit(props) {\n  const { ingredient, handleIngredientDelete, handleIngredientChange } = props;\n  const [currentIngredient, setCurrentIngredient] = useState(ingredient);\n\n  const handleIngredientEditInputChange = (changes) => {\n    setCurrentIngredient({ ...currentIngredient, ...changes });\n  };\n\n  useEffect(() => {\n    handleIngredientChange(currentIngredient.id, currentIngredient);\n  }, [currentIngredient, handleIngredientChange]);\n\n  return (\n    <>\n      <input\n        className=\"recipe-edit__input\"\n        type=\"text\"\n        onChange={(e) =>\n          handleIngredientEditInputChange({ name: e.target.value })\n        }\n        value={currentIngredient.name}\n      />\n      <input\n        className=\"recipe-edit__input\"\n        type=\"text\"\n        onChange={(e) =>\n          handleIngredientEditInputChange({ amount: e.target.value })\n        }\n        value={currentIngredient.amount}\n      />\n      <button\n        className=\"btn btn--danger\"\n        onClick={() => handleIngredientDelete(ingredient.id)}\n      >\n        &times;\n      </button>\n    </>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport RecipeIngredientEdit from \"./RecipeIngredientEdit\";\nimport { RecipeContext } from \"./App\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function RecipeEdit({ recipe }) {\n  const { handleRecipeChange, handleRecipeSelect } = useContext(RecipeContext);\n  const [currentRecipe, setCurrentRecipe] = useState(recipe);\n\n  function handleEditInputChange(changes) {\n    setCurrentRecipe({ ...currentRecipe, ...changes });\n  }\n\n  function handleIngredientChange(id, ingredient) {\n    let ingredients = currentRecipe.ingredients;\n    const index = ingredients.findIndex((r) => r.id === id);\n    ingredients[index] = ingredient;\n  }\n\n  function handleIngredientAdd() {\n    const newIngredient = {\n      id: uuidv4(),\n      name: \"\",\n      amount: \"\",\n    };\n    handleEditInputChange({\n      ingredients: [...currentRecipe.ingredients, newIngredient],\n    });\n  }\n\n  function handleIngredientDelete(id) {\n    handleEditInputChange({\n      ingredients: currentRecipe.ingredients.filter((i) => i.id !== id),\n    });\n  }\n\n  function uploadImage(files) {\n    const formData = new FormData();\n    formData.append(\"file\", files[0]);\n    formData.append(\"upload_preset\", \"myrecipes\");\n\n    axios\n      .post(\"https://api.cloudinary.com/v1_1/dwlvlqpso/image/upload\", formData)\n      .then((response) => {\n        handleEditInputChange({ image: response.data.secure_url });\n        console.log(\"image set\");\n      });\n  }\n\n  return (\n    <>\n      <div className=\"overlay\" />\n      <div className=\"recipe-edit\">\n        <div className=\"recipe-edit__details-grid\">\n          <label htmlFor=\"image\" className=\"recipe-edit__label\">\n            Image\n          </label>\n          <input\n            type=\"file\"\n            onChange={(e) => {\n              uploadImage(e.target.files);\n            }}\n          />\n          <label htmlFor=\"name\" className=\"recipe-edit__label\">\n            Name\n          </label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            value={currentRecipe.name}\n            onChange={(e) => handleEditInputChange({ name: e.target.value })}\n            className=\"recipe-edit__input\"\n          />\n          <label htmlFor=\"cookTime\" className=\"recipe-edit__label\">\n            Cook Time\n          </label>\n          <input\n            type=\"text\"\n            name=\"cookTime\"\n            id=\"cookTime\"\n            value={currentRecipe.cookTime}\n            onChange={(e) =>\n              handleEditInputChange({ cookTime: e.target.value })\n            }\n            className=\"recipe-edit__input\"\n          />\n          <label htmlFor=\"servings\" className=\"recipe-edit__label\">\n            Servings\n          </label>\n          <input\n            type=\"number\"\n            min=\"1\"\n            name=\"servings\"\n            id=\"servings\"\n            value={currentRecipe.servings}\n            onChange={(e) =>\n              handleEditInputChange({\n                servings: parseInt(e.target.value) || \"\",\n              })\n            }\n            className=\"recipe-edit__input\"\n          />\n        </div>\n        <div className=\"recipe-edit__instructions\">\n          <label htmlFor=\"instructions\" className=\"recipe-edit__label\">\n            Instructions\n          </label>\n          <textarea\n            name=\"instructions\"\n            className=\"recipe-edit__input\"\n            value={currentRecipe.instructions}\n            onChange={(e) =>\n              handleEditInputChange({ instructions: e.target.value })\n            }\n            id=\"instructions\"\n          />\n        </div>\n        <br />\n        <div className=\"recipe-edit__add_ingredient\">\n          <label className=\"recipe-edit__label\">Ingredients</label>\n          <div onClick={() => handleIngredientAdd()}>\n            <FontAwesomeIcon\n              className=\"recipe-edit__icon-add-ingredient\"\n              icon={faPlus}\n            />\n          </div>\n        </div>\n        <div className=\"recipe-edit__ingredient-grid\">\n          <div>Name</div>\n          <div>Amount</div>\n          <div></div>\n          {currentRecipe.ingredients.map((ingredient) => (\n            <RecipeIngredientEdit\n              key={ingredient.id}\n              handleEditInputChange={handleEditInputChange}\n              currentRecipe={currentRecipe}\n              handleIngredientChange={handleIngredientChange}\n              handleIngredientDelete={handleIngredientDelete}\n              ingredient={ingredient}\n            />\n          ))}\n        </div>\n        <div className=\"recipe-edit__details-grid\">\n          <label htmlFor=\"author\" className=\"recipe-edit__label\">\n            Created by\n          </label>\n          <input\n            type=\"text\"\n            name=\"author\"\n            id=\"author\"\n            value={currentRecipe.author}\n            onChange={(e) => handleEditInputChange({ author: e.target.value })}\n            className=\"recipe-edit__input\"\n          />\n        </div>\n        <div className=\"recipe-edit__button-container\">\n          <button\n            className=\"btn recipe-cancel-button\"\n            onClick={() => handleRecipeSelect(undefined)}\n          >\n            Cancel\n          </button>\n          <button\n            className=\"btn recipe-edit__update-button\"\n            onClick={() => {\n              handleRecipeChange(currentRecipe._id, currentRecipe);\n              handleRecipeSelect(undefined);\n            }}\n          >\n            Update\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { RecipeContext } from \"./App\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function SearchBox() {\n  const { handleRecipeSearch } = useContext(RecipeContext);\n  return (\n    <div className=\"search-container\">\n      <div className=\"searchbox\">\n        <input\n          className=\"search\"\n          type=\"text\"\n          placeholder=\"Search a recipe\"\n          onChange={(e) => handleRecipeSearch(e.target.value)}\n        />\n        <FontAwesomeIcon className=\"search-icon\" icon={faSearch} />\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport RecipeList from \"./RecipeList\";\nimport RecipeEdit from \"./RecipeEdit\";\nimport SearchBox from \"./SearchBox\";\nimport axios from \"axios\";\nimport \"../css/app.css\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport const RecipeContext = React.createContext();\n// const LOCAL_STORAGE_KEY = \"cookingWithReact.recipes\";\n\nfunction App() {\n  const [selectedRecipeId, setSelectedRecipeId] = useState();\n  const [recipes, setRecipes] = useState([]);\n  const [searchText, setSearchText] = useState();\n  const selectedRecipe = recipes.find(\n    (recipe) => recipe._id === selectedRecipeId\n  );\n\n  useEffect(() => {\n    getRecipes();\n  }, []);\n\n  function getRecipes() {\n    axios\n      .get(\"/api\")\n      .then((response) => {\n        const allRecipes = response.data;\n        setRecipes(allRecipes);\n      })\n      .catch((error) => console.error(`Error: ${error}`));\n  }\n\n  // useEffect(() => {\n  //   localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(recipes));\n  // }, [recipes]);\n\n  const recipeContextValue = {\n    handleRecipeAdd,\n    handleRecipeDelete,\n    handleRecipeSelect,\n    handleRecipeChange,\n    handleRecipeSearch,\n  };\n\n  function handleRecipeSelect(_id) {\n    setSelectedRecipeId(_id);\n  }\n\n  function handleRecipeAdd() {\n    const newRecipe = {\n      id: uuidv4(),\n      image: \"/img/default.jpg\",\n      name: \"\",\n      servings: 1,\n      cookTime: \"\",\n      instructions: \"\",\n      ingredients: [{ id: uuidv4(), name: \"\", amount: \"\" }],\n      author: \"\",\n    };\n\n    axios({\n      url: \"/api/save\",\n      method: \"POST\",\n      data: newRecipe,\n    })\n      .then(() => {\n        console.log(\"Data has been sent to the server\");\n      })\n      .catch(() => {\n        console.log(\"Internal server error\");\n      })\n      .then(getRecipes());\n    setSelectedRecipeId(newRecipe._id);\n    // setRecipes([...recipes, newRecipe]);\n  }\n\n  function handleRecipeChange(_id, recipe) {\n    // const newRecipes = [...recipes];\n    // const index = newRecipes.findIndex((r) => r._id === _id);\n    // newRecipes[index] = recipe;\n    // setRecipes(newRecipes);\n    axios.put(\"/api/put/\" + _id, recipe);\n    getRecipes();\n  }\n\n  function handleRecipeDelete(id) {\n    axios.delete(\"api/delete/\" + id).then((res) => {\n      setRecipes(recipes.filter((recipe) => recipe._id !== id));\n    });\n    // if (selectedRecipeId != null && selectedRecipeId === id) {\n    //   setSelectedRecipeId(undefined);\n  }\n\n  function handleRecipeSearch(input) {\n    setSearchText(input);\n  }\n\n  const filteredRecipes =\n    searchText != null\n      ? recipes.filter((r) => r.name.toLowerCase().includes(searchText))\n      : recipes;\n\n  return (\n    <RecipeContext.Provider value={recipeContextValue}>\n      <div className=\"container\">\n        {/*      <h1 className=\"page-title\">Yummy recipes</h1>*/}\n        <SearchBox />\n        <RecipeList recipes={recipes} filteredRecipes={filteredRecipes} />\n        {selectedRecipe && <RecipeEdit recipe={selectedRecipe} />}\n        <div className=\"recipe-list__add-recipe-btn-container\">\n          <button className=\"btn btn--primary\" onClick={handleRecipeAdd}>\n            Add Recipe\n          </button>\n        </div>\n      </div>\n    </RecipeContext.Provider>\n  );\n}\n\n// const sampleRecipes = [\n//   {\n//     id: 1,\n//     image: \"/img/poke.jpg\",\n//     name: \"Poke Bowl\",\n//     servings: 3,\n//     cookTime: \"1:45\",\n//     instructions:\n//       \"1. Cut all the ingredients\\n2. Put them in a bowl\\n3. Enjoy your Poke bowl!\",\n//     ingredients: [\n//       {\n//         id: 1,\n//         name: \"Tofu\",\n//         amount: \"1 Block\",\n//       },\n//       {\n//         id: 2,\n//         name: \"Tomatoes\",\n//         amount: \"1\",\n//       },\n//     ],\n//     author: \"Ana\",\n//     vegan: true,\n//   },\n//   {\n//     id: 2,\n//     image:\n//       \"https://images.unsplash.com/photo-1505394033641-40c6ad1178d7?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=506&q=80\",\n//     name: \"Raspberry Ice Cream\",\n//     servings: 3,\n//     cookTime: \"0:45\",\n//     instructions:\n//       \"1. Blend raspberries and milk\\n2. Put mixture in the freezer for 40 minutes\\n3. Enjoy your raspberry ice cream!\",\n//     ingredients: [\n//       {\n//         id: 1,\n//         name: \"Frozen raspberries\",\n//         amount: \"500 g\",\n//       },\n//       {\n//         id: 2,\n//         name: \"Milk of your choice\",\n//         amount: \"1 Liter\",\n//       },\n//     ],\n//     author: \"Ana\",\n//     vegan: true,\n//   },\n// ];\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}