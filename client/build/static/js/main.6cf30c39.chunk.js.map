{"version":3,"sources":["components/Ingredient.js","components/IngredientList.js","components/Recipe.js","components/RecipeList.js","components/RecipeIngredientEdit.js","components/RecipeEdit.js","components/RecipeIngredientCreate.js","components/RecipeCreate.js","components/SearchBox.js","components/SortMenu.js","components/Footer.js","components/App.js","index.js"],"names":["Ingredient","name","amount","IngredientList","ingredientElements","ingredients","map","ingredient","id","className","Recipe","props","useContext","RecipeContext","handleRecipeDelete","handleRecipeSelect","useState","flip","setFlip","height","setHeight","frontEl","useRef","backEl","_id","image","cookTime","servings","instructions","author","setMaxHeight","frontHeight","current","getBoundingClientRect","backHeight","Math","max","useEffect","window","addEventListener","removeEventListener","onClick","style","ref","src","alt","icon","faEdit","faTrash","RecipeList","recipes","filteredRecipes","loading","breakpointCols","default","1100","800","600","columnClassName","recipe","RecipeIngredientEdit","handleIngredientDelete","handleIngredientChange","currentIngredient","setCurrentIngredient","handleIngredientEditInputChange","changes","type","onChange","e","target","value","RecipeEdit","handleRecipeChange","currentRecipe","setCurrentRecipe","handleEditInputChange","index","findIndex","r","filter","i","htmlFor","files","formData","FormData","append","axios","post","then","response","data","secure_url","console","log","uploadImage","min","parseInt","newIngredient","uuidv4","handleIngredientAdd","faPlus","undefined","RecipeIngredientCreate","handleIngredientCreateChange","handleIngredientCreateDelete","setNewIngredient","handleIngredientCreateInputChange","RecipeCreate","newRecipe","setNewRecipe","handleCreateForm","handleRecipeAdd","handleInputCreateChange","handleIngredientCreateAdd","SearchBox","handleRecipeSearch","placeholder","SortMenu","sortRecipes","Footer","href","React","createContext","App","selectedRecipeId","setSelectedRecipeId","setRecipes","searchText","setSearchText","createForm","setCreateForm","selectedRecipe","find","getRecipes","get","allRecipes","catch","error","recipeContextValue","newRecipeData","url","method","delete","res","put","input","toLowerCase","includes","Provider","sortProperty","nameaz","nameza","oldest","newest","sorted","sort","a","b","localeCompare","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6cf30c39.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Ingredient({ name, amount}) {\n  return (\n    <>\n      <span>{name}</span>\n      <span>{amount}</span>\n    </>\n  )\n}\n","import React from \"react\";\nimport Ingredient from \"./Ingredient\";\n\nexport default function IngredientList({ ingredients }) {\n  const ingredientElements = ingredients.map((ingredient) => {\n    return <Ingredient key={ingredient.id} {...ingredient} />;\n  });\n  return <div className=\"ingredient-grid\">{ingredientElements}</div>;\n}\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\nimport IngredientList from \"./IngredientList\";\nimport { RecipeContext } from \"./App\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function Recipe(props) {\n  const { handleRecipeDelete, handleRecipeSelect } = useContext(RecipeContext);\n  const [flip, setFlip] = useState(false);\n  const [height, setHeight] = useState(\"initial\");\n\n  const frontEl = useRef();\n  const backEl = useRef();\n\n  const {\n    _id,\n    image,\n    name,\n    cookTime,\n    servings,\n    instructions,\n    ingredients,\n    author,\n  } = props;\n\n  function setMaxHeight() {\n    const frontHeight = frontEl.current.getBoundingClientRect().height;\n    const backHeight = backEl.current.getBoundingClientRect().height;\n    setHeight(Math.max(frontHeight, backHeight));\n  }\n\n  useEffect(setMaxHeight, [\n    name,\n    cookTime,\n    servings,\n    instructions,\n    ingredients,\n    author,\n  ]);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", setMaxHeight);\n    return () => window.removeEventListener(\"resize\", setMaxHeight);\n  }, []);\n\n  return (\n    <div\n      className={`recipe ${flip ? \"flip\" : \"\"}`}\n      onClick={() => setFlip(!flip)}\n      style={{ height: height }}\n    >\n      <div className=\"front\" ref={frontEl} style={{ height: height }}>\n        <p className=\"text-tag\">click for instructions</p>\n        <img className=\"recipe__image\" src={image} alt=\"\" />\n        <div className=\"recipe__header\">\n          <h3 className=\"recipe__title\">{name}</h3>\n        </div>\n      </div>\n      <div className=\"back\" ref={backEl} style={{ height: height }}>\n        <div className=\"btn-container\">\n          <span\n            className=\"btn btn-recipe\"\n            onClick={() => handleRecipeSelect(_id)}\n          >\n            <FontAwesomeIcon icon={faEdit} />\n          </span>\n          <span\n            className=\"btn btn-recipe\"\n            onClick={() => handleRecipeDelete(_id)}\n          >\n            <FontAwesomeIcon icon={faTrash} />\n          </span>\n        </div>\n        <div className=\"recipe__row\">\n          <span className=\"recipe__label\">Cook Time:</span>\n          <span className=\"recipe__value\">{cookTime}</span>\n        </div>\n        <div className=\"recipe__row\">\n          <span className=\"recipe__label\">Servings:</span>\n          <span className=\"recipe__value\">{servings}</span>\n        </div>\n        <div className=\"recipe__row\">\n          <span className=\"recipe__label\">Ingredients:</span>\n          <div className=\"recipe__value recipe__value--indented\">\n            <IngredientList ingredients={ingredients} />\n          </div>\n        </div>\n        <div className=\"recipe__row\">\n          <span className=\"recipe__label\">Instructions:</span>\n          <div className=\"recipe__value recipe__instructions recipe__value--indented\">\n            {instructions}\n          </div>\n        </div>\n        <div className=\"recipe__row recipe__author\">\n          <span className=\"recipe__label\">Created by </span>\n          <span className=\"recipe__value\">{author}</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import Recipe from \"./Recipe\";\nimport Masonry from \"react-masonry-css\";\n\nexport default function RecipeList({ recipes, filteredRecipes, loading }) {\n  const breakpointColumnsObj = {\n    default: 4,\n    1100: 3,\n    800: 2,\n    600: 1,\n  };\n  return (\n    <>\n      <div className=\"loading\">{loading && \"Loading...\"}</div>\n      <Masonry\n        breakpointCols={breakpointColumnsObj}\n        className=\"my-masonry-grid\"\n        columnClassName=\"my-masonry-grid_column\"\n      >\n        {filteredRecipes.map((recipe) => {\n          return <Recipe key={recipe._id} {...recipe} />;\n        })}\n      </Masonry>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nexport default function RecipeIngredientEdit(props) {\n  const { ingredient, handleIngredientDelete, handleIngredientChange } = props;\n  const [currentIngredient, setCurrentIngredient] = useState(ingredient);\n\n  const handleIngredientEditInputChange = (changes) => {\n    setCurrentIngredient({ ...currentIngredient, ...changes });\n  };\n\n  useEffect(() => {\n    handleIngredientChange(currentIngredient.id, currentIngredient);\n  }, [currentIngredient, handleIngredientChange]);\n\n  return (\n    <>\n      <input\n        className=\"recipe-edit__input\"\n        type=\"text\"\n        onChange={(e) =>\n          handleIngredientEditInputChange({ name: e.target.value })\n        }\n        value={currentIngredient.name}\n      />\n      <input\n        className=\"recipe-edit__input\"\n        type=\"text\"\n        onChange={(e) =>\n          handleIngredientEditInputChange({ amount: e.target.value })\n        }\n        value={currentIngredient.amount}\n      />\n      <button\n        className=\"btn btn-ingredient-delete\"\n        onClick={() => handleIngredientDelete(ingredient.id)}\n      >\n        &times;\n      </button>\n    </>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport RecipeIngredientEdit from \"./RecipeIngredientEdit\";\nimport { RecipeContext } from \"./App\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function RecipeEdit({ recipe }) {\n  const { handleRecipeChange, handleRecipeSelect } = useContext(RecipeContext);\n  const [currentRecipe, setCurrentRecipe] = useState(recipe);\n\n  function handleEditInputChange(changes) {\n    setCurrentRecipe({ ...currentRecipe, ...changes });\n  }\n\n  function handleIngredientChange(id, ingredient) {\n    let ingredients = currentRecipe.ingredients;\n    const index = ingredients.findIndex((r) => r.id === id);\n    ingredients[index] = ingredient;\n  }\n\n  function handleIngredientAdd() {\n    const newIngredient = {\n      id: uuidv4(),\n      name: \"\",\n      amount: \"\",\n    };\n    handleEditInputChange({\n      ingredients: [...currentRecipe.ingredients, newIngredient],\n    });\n  }\n\n  function handleIngredientDelete(id) {\n    handleEditInputChange({\n      ingredients: currentRecipe.ingredients.filter((i) => i.id !== id),\n    });\n  }\n\n  function uploadImage(files) {\n    const formData = new FormData();\n    formData.append(\"file\", files[0]);\n    formData.append(\"upload_preset\", \"myrecipes\");\n\n    axios\n      .post(\"https://api.cloudinary.com/v1_1/dwlvlqpso/image/upload\", formData)\n      .then((response) => {\n        handleEditInputChange({ image: response.data.secure_url });\n        console.log(\"image set\");\n      });\n  }\n\n  return (\n    <>\n      <div className=\"overlay\" />\n      <div className=\"recipe-edit\">\n        <div className=\"recipe-edit__details-grid\">\n          <label htmlFor=\"image\" className=\"recipe-edit__label\">\n            Image\n          </label>\n          <input\n            type=\"file\"\n            onChange={(e) => {\n              uploadImage(e.target.files);\n            }}\n          />\n          <label htmlFor=\"name\" className=\"recipe-edit__label\">\n            Name\n          </label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            value={currentRecipe.name}\n            onChange={(e) => handleEditInputChange({ name: e.target.value })}\n            className=\"recipe-edit__input\"\n          />\n          <label htmlFor=\"cookTime\" className=\"recipe-edit__label\">\n            Cook Time\n          </label>\n          <input\n            type=\"text\"\n            name=\"cookTime\"\n            id=\"cookTime\"\n            value={currentRecipe.cookTime}\n            onChange={(e) =>\n              handleEditInputChange({ cookTime: e.target.value })\n            }\n            className=\"recipe-edit__input\"\n          />\n          <label htmlFor=\"servings\" className=\"recipe-edit__label\">\n            Servings\n          </label>\n          <input\n            type=\"number\"\n            min=\"1\"\n            name=\"servings\"\n            id=\"servings\"\n            value={currentRecipe.servings}\n            onChange={(e) =>\n              handleEditInputChange({\n                servings: parseInt(e.target.value) || \"\",\n              })\n            }\n            className=\"recipe-edit__input\"\n          />\n        </div>\n        <div className=\"recipe-edit__instructions\">\n          <label htmlFor=\"instructions\" className=\"recipe-edit__label\">\n            Instructions\n          </label>\n          <textarea\n            name=\"instructions\"\n            className=\"recipe-edit__input\"\n            value={currentRecipe.instructions}\n            onChange={(e) =>\n              handleEditInputChange({ instructions: e.target.value })\n            }\n            id=\"instructions\"\n          />\n        </div>\n        <br />\n        <div className=\"recipe-edit__add_ingredient\">\n          <label className=\"recipe-edit__label\">Ingredients</label>\n          <div onClick={() => handleIngredientAdd()}>\n            <FontAwesomeIcon\n              className=\"recipe-edit__icon-add-ingredient\"\n              icon={faPlus}\n            />\n          </div>\n        </div>\n        <div className=\"recipe-edit__ingredient-grid\">\n          <div>Name</div>\n          <div>Amount</div>\n          <div></div>\n          {currentRecipe.ingredients.map((ingredient) => (\n            <RecipeIngredientEdit\n              key={ingredient.id}\n              currentRecipe={currentRecipe}\n              handleIngredientChange={handleIngredientChange}\n              handleIngredientDelete={handleIngredientDelete}\n              ingredient={ingredient}\n            />\n          ))}\n        </div>\n        <div className=\"recipe-edit__details-grid\">\n          <label htmlFor=\"author\" className=\"recipe-edit__label\">\n            Created by\n          </label>\n          <input\n            type=\"text\"\n            name=\"author\"\n            id=\"author\"\n            value={currentRecipe.author}\n            onChange={(e) => handleEditInputChange({ author: e.target.value })}\n            className=\"recipe-edit__input\"\n          />\n        </div>\n        <div className=\"recipe-edit__button-container\">\n          <button\n            className=\"btn btn-edit btn-edit-cancel\"\n            onClick={() => handleRecipeSelect(undefined)}\n          >\n            Cancel\n          </button>\n          <button\n            className=\"btn btn-edit btn-edit-update\"\n            onClick={() => {\n              handleRecipeChange(currentRecipe._id, currentRecipe);\n              handleRecipeSelect(undefined);\n            }}\n          >\n            Update\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nexport default function RecipeIngredientCreate(props) {\n  const {\n    ingredient,\n    handleIngredientCreateChange,\n    handleIngredientCreateDelete,\n  } = props;\n\n  const [newIngredient, setNewIngredient] = useState(ingredient);\n\n  const handleIngredientCreateInputChange = (changes) => {\n    setNewIngredient({ ...newIngredient, ...changes });\n    console.log(changes);\n  };\n\n  useEffect(() => {\n    handleIngredientCreateChange(newIngredient.id, newIngredient);\n  }, [newIngredient, handleIngredientCreateChange]);\n\n  return (\n    <>\n      <input\n        className=\"recipe-edit__input\"\n        type=\"text\"\n        onChange={(e) =>\n          handleIngredientCreateInputChange({ name: e.target.value })\n        }\n        value={newIngredient.name}\n      />\n      <input\n        className=\"recipe-edit__input\"\n        type=\"text\"\n        onChange={(e) =>\n          handleIngredientCreateInputChange({ amount: e.target.value })\n        }\n        value={newIngredient.amount}\n      />\n      <button\n        className=\"btn btn-ingredient-delete\"\n        onClick={() => handleIngredientCreateDelete(ingredient.id)}\n      >\n        &times;\n      </button>\n    </>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport RecipeIngredientCreate from \"./RecipeIngredientCreate\";\nimport { RecipeContext } from \"./App\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function RecipeCreate() {\n  const [newRecipe, setNewRecipe] = useState({\n    id: uuidv4(),\n    image: \"/img/default.jpg\",\n    name: \"\",\n    servings: 1,\n    cookTime: \"\",\n    instructions: \"\",\n    ingredients: [{ id: uuidv4(), name: \"\", amount: \"\" }],\n    author: \"\",\n  });\n  const { handleCreateForm, handleRecipeAdd } = useContext(RecipeContext);\n\n  function handleInputCreateChange(changes) {\n    setNewRecipe({ ...newRecipe, ...changes });\n  }\n\n  function handleIngredientCreateChange(id, ingredient) {\n    let ingredients = newRecipe.ingredients;\n    const index = ingredients.findIndex((r) => r.id === id);\n    ingredients[index] = ingredient;\n  }\n\n  function handleIngredientCreateAdd() {\n    const newIngredient = {\n      id: uuidv4(),\n      name: \"\",\n      amount: \"\",\n    };\n    handleInputCreateChange({\n      ingredients: [...newRecipe.ingredients, newIngredient],\n    });\n  }\n\n  function handleIngredientCreateDelete(id) {\n    handleInputCreateChange({\n      ingredients: newRecipe.ingredients.filter((i) => i.id !== id),\n    });\n  }\n\n  function uploadImage(files) {\n    const formData = new FormData();\n    formData.append(\"file\", files[0]);\n    formData.append(\"upload_preset\", \"myrecipes\");\n\n    axios\n      .post(\"https://api.cloudinary.com/v1_1/dwlvlqpso/image/upload\", formData)\n      .then((response) => {\n        handleInputCreateChange({ image: response.data.secure_url });\n        console.log(\"image set\");\n      });\n  }\n\n  return (\n    <>\n      <div className=\"overlay\" />\n      <div className=\"recipe-edit\">\n        <div className=\"recipe-edit__details-grid\">\n          <label htmlFor=\"image\" className=\"recipe-edit__label\">\n            Image\n          </label>\n          <input\n            type=\"file\"\n            onChange={(e) => {\n              uploadImage(e.target.files);\n            }}\n          />\n          <label htmlFor=\"name\" className=\"recipe-edit__label\">\n            Name\n          </label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            value={newRecipe.name}\n            onChange={(e) => handleInputCreateChange({ name: e.target.value })}\n            className=\"recipe-edit__input\"\n          />\n          <label htmlFor=\"cookTime\" className=\"recipe-edit__label\">\n            Cook Time\n          </label>\n          <input\n            type=\"text\"\n            name=\"cookTime\"\n            id=\"cookTime\"\n            value={newRecipe.cookTime}\n            onChange={(e) =>\n              handleInputCreateChange({ cookTime: e.target.value })\n            }\n            className=\"recipe-edit__input\"\n          />\n          <label htmlFor=\"servings\" className=\"recipe-edit__label\">\n            Servings\n          </label>\n          <input\n            type=\"number\"\n            min=\"1\"\n            name=\"servings\"\n            id=\"servings\"\n            value={newRecipe.servings}\n            onChange={(e) =>\n              handleInputCreateChange({\n                servings: parseInt(e.target.value) || \"\",\n              })\n            }\n            className=\"recipe-edit__input\"\n          />\n        </div>\n        <div className=\"recipe-edit__instructions\">\n          <label htmlFor=\"instructions\" className=\"recipe-edit__label\">\n            Instructions\n          </label>\n          <textarea\n            name=\"instructions\"\n            className=\"recipe-edit__input\"\n            value={newRecipe.instructions}\n            onChange={(e) =>\n              handleInputCreateChange({ instructions: e.target.value })\n            }\n            id=\"instructions\"\n          />\n        </div>\n        <br />\n        <div className=\"recipe-edit__add_ingredient\">\n          <label className=\"recipe-edit__label\">Ingredients</label>\n          <div onClick={() => handleIngredientCreateAdd()}>\n            <FontAwesomeIcon\n              className=\"recipe-edit__icon-add-ingredient\"\n              icon={faPlus}\n            />\n          </div>\n        </div>\n        <div className=\"recipe-edit__ingredient-grid\">\n          <div>Name</div>\n          <div>Amount</div>\n          <div></div>\n          {newRecipe.ingredients.map((ingredient) => (\n            <RecipeIngredientCreate\n              key={ingredient.id}\n              newRecipe={newRecipe}\n              handleIngredientCreateChange={handleIngredientCreateChange}\n              handleIngredientCreateDelete={handleIngredientCreateDelete}\n              ingredient={ingredient}\n            />\n          ))}\n        </div>\n        <div className=\"recipe-edit__details-grid\">\n          <label htmlFor=\"author\" className=\"recipe-edit__label\">\n            Created by\n          </label>\n          <input\n            type=\"text\"\n            name=\"author\"\n            id=\"author\"\n            value={newRecipe.author}\n            onChange={(e) =>\n              handleInputCreateChange({ author: e.target.value })\n            }\n            className=\"recipe-edit__input\"\n          />\n        </div>\n        <div className=\"recipe-edit__button-container\">\n          <button\n            className=\"btn btn-edit btn-edit-cancel\"\n            onClick={handleCreateForm}\n          >\n            Cancel\n          </button>\n          <button\n            className=\"btn btn-edit btn-edit-update\"\n            onClick={() => handleRecipeAdd(newRecipe)}\n          >\n            Create recipe\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { RecipeContext } from \"./App\";\nimport { BsSearch } from \"react-icons/bs\";\n\nexport default function SearchBox() {\n  const { handleRecipeSearch } = useContext(RecipeContext);\n  return (\n    <div className=\"search-wrapper\">\n      <div className=\"search-icon\">\n        <BsSearch />\n      </div>\n      <input\n        className=\"searchbox\"\n        type=\"text\"\n        placeholder=\"Search a recipe\"\n        onChange={(e) => handleRecipeSearch(e.target.value)}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function SortMenu({ sortRecipes }) {\n  return (\n    <>\n      <div className=\"sort-menu\">\n        <select onChange={(e) => sortRecipes(e.target.value)}>\n          <option value=\"name\">Sort by</option>\n          <option value=\"nameaz\">Name, A-Z</option>\n          <option value=\"nameza\">Name, Z-A</option>\n          <option value=\"oldest\">Created (oldest)</option>\n          <option value=\"newest\">Created (newest)</option>\n        </select>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport {\n  FaInstagram,\n  FaFacebook,\n  FaTwitter,\n  FaPinterest,\n  FaYoutube,\n} from \"react-icons/fa\";\n\nexport default function Footer() {\n  return (\n    <>\n      <footer className=\"footer\">\n        <div className=\"logo-container\">\n          <img className=\"footer-logo\" alt=\"logo\" src=\"../img/logo.png\" />\n          <div className=\"social-icons\">\n            <a href=\"/\">\n              <FaInstagram className=\"social-icon\" />\n            </a>\n            <a href=\"/\">\n              <FaFacebook className=\"social-icon\" />\n            </a>\n            <a href=\"/\">\n              <FaTwitter className=\"social-icon\" />\n            </a>\n            <a href=\"/\">\n              <FaPinterest className=\"social-icon\" />\n            </a>\n            <a href=\"/\">\n              <FaYoutube className=\"social-icon\" />\n            </a>\n          </div>\n        </div>\n      </footer>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport RecipeList from \"./RecipeList\";\nimport RecipeEdit from \"./RecipeEdit\";\nimport RecipeCreate from \"./RecipeCreate\";\nimport SearchBox from \"./SearchBox\";\nimport SortMenu from \"./SortMenu\";\nimport Footer from \"./Footer\";\nimport axios from \"axios\";\nimport \"../css/app.css\";\n\nexport const RecipeContext = React.createContext();\n\nfunction App() {\n  const [selectedRecipeId, setSelectedRecipeId] = useState();\n  const [recipes, setRecipes] = useState([]);\n  const [searchText, setSearchText] = useState();\n  const [createForm, setCreateForm] = useState(false);\n\n  function handleCreateForm() {\n    setCreateForm(!createForm);\n  }\n\n  const selectedRecipe = recipes.find(\n    (recipe) => recipe._id === selectedRecipeId\n  );\n\n  useEffect(() => {\n    getRecipes();\n  }, []);\n\n  function getRecipes() {\n    axios\n      .get(\"/api\")\n      .then((response) => {\n        const allRecipes = response.data;\n        setRecipes(allRecipes);\n      })\n      .catch((error) => console.error(`Error: ${error}`));\n  }\n\n  const recipeContextValue = {\n    handleRecipeAdd,\n    handleRecipeDelete,\n    handleRecipeSelect,\n    handleRecipeChange,\n    handleRecipeSearch,\n    handleCreateForm,\n  };\n\n  function handleRecipeSelect(_id) {\n    setSelectedRecipeId(_id);\n  }\n\n  function handleRecipeAdd(newRecipeData) {\n    axios({\n      url: \"/api/save\",\n      method: \"POST\",\n      data: newRecipeData,\n    })\n      .then(() => {\n        console.log(newRecipeData);\n        console.log(\"Data has been sent to the server\");\n      })\n      .catch(() => {\n        console.log(\"Internal server error\");\n      })\n      .then(getRecipes());\n    handleCreateForm();\n  }\n\n  function handleRecipeChange(_id, recipe) {\n    axios.put(\"/api/put/\" + _id, recipe);\n    getRecipes();\n  }\n\n  function handleRecipeDelete(id) {\n    axios.delete(\"api/delete/\" + id).then((res) => {\n      setRecipes(recipes.filter((recipe) => recipe._id !== id));\n    });\n  }\n\n  function handleRecipeSearch(input) {\n    setSearchText(input);\n  }\n\n  const filteredRecipes =\n    searchText != null\n      ? recipes.filter((r) => r.name.toLowerCase().includes(searchText))\n      : recipes;\n\n  function sortRecipes(type) {\n    const types = {\n      nameaz: \"name\",\n      nameza: \"name\",\n      oldest: \"createdAt\",\n      newest: \"createdAt\",\n    };\n    const sortProperty = types[type];\n    const sorted = [...recipes].sort((a, b) => {\n      if (type === \"newest\" || type === \"nameza\") {\n        return b[sortProperty].localeCompare(a[sortProperty]);\n      } else {\n        return a[sortProperty].localeCompare(b[sortProperty]);\n      }\n    });\n    setRecipes(sorted);\n  }\n\n  return (\n    <RecipeContext.Provider value={recipeContextValue}>\n      <div className=\"banner\">\n        <div className=\"banner-container\">\n          <h1 className=\"title\">Recipely</h1>\n          <p className=\"subtitle\">Simple recipes that make you feel good</p>\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"header\">\n          <div className=\"add-btn-container\">\n            <button className=\"btn btn-add\" onClick={handleCreateForm}>\n              Add recipe\n            </button>\n          </div>\n          <div className=\"filterbox\">\n            <SearchBox />\n            <SortMenu sortRecipes={sortRecipes} />\n          </div>\n        </div>\n        {createForm && <RecipeCreate />}\n        <RecipeList recipes={recipes} filteredRecipes={filteredRecipes} />\n        {selectedRecipe && <RecipeEdit recipe={selectedRecipe} />}\n      </div>\n      <Footer />\n    </RecipeContext.Provider>\n  );\n}\n\n// const sampleRecipes = [\n//   {\n//     id: 1,\n//     image: \"/img/poke.jpg\",\n//     name: \"Poke Bowl\",\n//     servings: 3,\n//     cookTime: \"1:45\",\n//     instructions:\n//       \"1. Cut all the ingredients\\n2. Put them in a bowl\\n3. Enjoy your Poke bowl!\",\n//     ingredients: [\n//       {\n//         id: 1,\n//         name: \"Tofu\",\n//         amount: \"1 Block\",\n//       },\n//       {\n//         id: 2,\n//         name: \"Tomatoes\",\n//         amount: \"1\",\n//       },\n//     ],\n//     author: \"Ana\",\n//     vegan: true,\n//   },\n//   {\n//     id: 2,\n//     image:\n//       \"https://images.unsplash.com/photo-1505394033641-40c6ad1178d7?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=506&q=80\",\n//     name: \"Raspberry Ice Cream\",\n//     servings: 3,\n//     cookTime: \"0:45\",\n//     instructions:\n//       \"1. Blend raspberries and milk\\n2. Put mixture in the freezer for 40 minutes\\n3. Enjoy your raspberry ice cream!\",\n//     ingredients: [\n//       {\n//         id: 1,\n//         name: \"Frozen raspberries\",\n//         amount: \"500 g\",\n//       },\n//       {\n//         id: 2,\n//         name: \"Milk of your choice\",\n//         amount: \"1 Liter\",\n//       },\n//     ],\n//     author: \"Ana\",\n//     vegan: true,\n//   },\n// ];\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}